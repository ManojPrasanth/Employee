Elastic Search:

Elasticsearch is a search engine based on Lucene. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. 
Elasticsearch is developed in Java and is released as open source under the terms of the Apache License. Official clients are available in Java, .NET (C#), PHP, Python, Apache Groovy
and many other languages.[2] Elasticsearch is the most popular enterprise search engine followed by Apache Solr, also based on Lucene.[3]

Elasticsearch is developed alongside a data-collection and log-parsing engine called Logstash, and an analytics and visualisation platform called Kibana. The three products are designed
for use as an integrated solution, referred to as the "Elastic Stack" (formerly the "ELK stack").

Install steps for Elasticsearch

Terminal Command:
	wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.1.tar.gz
	wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.1.tar.gz.sha512
	shasum -a 512 -c elasticsearch-6.1.1.tar.gz.sha512 
	tar -xzf elasticsearch-6.1.1.tar.gz
	cd elasticsearch-6.1.1/

To download elasticsearch tar.qz doc
	https://www.elastic.co/start

to start elasticsearch
	./bin/elasticsearch
	./bin/elasticsearch -d -p pid (to run with processid)

open elasticsearch
	localhost:9200

to kill
kill `cat pid` (running with pid)

To download kibana tar.qz doc
	https://www.elastic.co/start

kibana-download tar.gz file
	tar -xzf kibana-6.1.1-linux-x86_64.tar.gz 


Install X-Pack into Elasticsearch
	In Elasticsearch install dir, run…
		bin/elasticsearch-plugin install x-pack
	Start Elasticsearch...
		bin/elasticsearch
	Generate default passwords...
		bin/x-pack/setup-passwords auto

Install X-Pack into Kibana
	In Kibana install dir, run…
		bin/kibana-plugin install x-pack
	Add credentials to the kibana.yml file
		elasticsearch.username: "kibana"
		elasticsearch.password:  "<pwd>"

To start kibana
	bin/kibana

open kibana
	Open your browser…
		http://localhost:5601
	Enter credentials…
		Username: elastic  Password: <pwd>


POST /library/books/_search
{
   "query" : {
      "term" : { "description" : "movie" }
   },
   "sort" : [
      {"price" : {"order" : "desc"}}
   ]
}

Logstash:
Logstash is a tool for managing events and logs. When used generically the term encompases a larger system of log collection, processing, storage and searching activities.
Logstash is a tool to collect, process, and forward events and log messages. Collection is accomplished via configurable input plugins including raw socket/packet communication,
file tailing, and several message bus clients. Once an input plugin has collected data it can be processed by any number of filters which modify and annotate the event data. 
Finally logstash routes events to output plugins which can forward the events to a variety of external programs including Elasticsearch, local files and several message bus implementations.

KIBANA:
 KIBANA is an open source data visualization plugin for Elasticsearch. It provides visualization capabilities on top of the content indexed on an Elasticsearch cluster. 
 Users can crPOST /library/books/_search
{
   "query" : {
      "term" : { "description" : "movie" }
   },
   "sort" : [
      {"price" : {"order" : "desc"}}
   ]
}
eate bar, line and scatter plots, or pie charts and maps on top of large volumes of data.[3]
 The combination of Elasticsearch, Logstash, and Kibana (also known as ELK stack or Elastic stack) is available as products or service.[4] 
 Logstash provides an input stream to Elastic for storage and search, and Kibana accesses the data for visualizations such as dashboards.[5]

History:
Shay Banon created the precursor to Elasticsearch, called Compass, in 2004. While thinking about the third version of Compass he realized that it would be necessary to rewrite 
big parts of Compass to "create a scalable search solution".[4] So he created "a solution built from the ground up to be distributed" and used a common interface, JSON over HTTP,
suitable for programming languages other than Java as well.[4] Shay Banon released the first version of Elasticsearch in February 2010.

Overview:
Elasticsearch can be used to search all kinds of documents. It provides scalable search, has near real-time search, and supports multitenancy.
"Elasticsearch is distributed, which means that indices can be divided into shards and each shard can have zero or more replicas. Each node hosts one or more shards, and acts as a 
coordinator to delegate operations to the correct shard(s). Rebalancing and routing are done automatically".[2] Related data is often stored in the same index, which consists of 
one or more primary shards, and zero or more replica shards. Once an index has been created, the number of primary shards cannot be changed.[66]

Elasticsearch uses Lucene and tries to make all its features available through the JSON and Java API. It supports facetting and percolating,[67] which can be useful for notifying if new
documents match for registered queries.

Another feature is called "gateway" and handles the long-term persistence of the index;[68] for example, an index can be recovered from the gateway in the event of a server crash.
Elasticsearch supports real-time GET requests, which makes it suitable as a NoSQL datastore,[69] but it lacks distributed transactions.[70]

----------------------------------------------------------------------------------------------------------

Elastic sample_codes

GET _search
{
  "query": {
    "match_all": {}
  }
}
----------------
GET /
-----------------
POST /my-index/my-type/1
{
  "body": "hello"
}
----------------
POST /my-index/my-type/3
{
  "body": "hi"
}
-------------------
GET /my-index/my-type/1
------------
GET /my-index/_search
{
  "query": {
    "match": {
      "body": "hello"
    }
  }
}
------------------------
DELETE /my-index/my-type/3
---------------------

PUT /library
{
  "settings": {
    "index.number_of_shards":1,
    "index.number_of_replicas":0
  }
}

//defaults 5 shards and 1 replica

------------------------

POST /library/books/_bulk
{ "index": { "_id":1}}
{ "title": "Harry potter", "price":250, "Author": "J.K Rowling", "colors": ["red","green","blue"], "description": "Outward appearance. Throughout the series, Harry is described as having his father's perpetually untidy black hair, his mother's bright green eyes, and a lightning bolt-shaped scar on his forehead. ... Rowling has also stated that Harry inherited his parents good looks."}
{ "index": { "_id":2}}
{ "title": "Half Girlfriend", "price":350, "Author": "Chethan Bagath", "colors": ["red","white","blue"], "description": "Chetan Bhagat commented,'Half-Girlfriend, to me, is a unique Indian phenomenon, where boys and girls are not clear about their relationship status with each other. A boy may think he is more than friends with the girl, but the girl is still not his girlfriend.... Because, in India, that is what most men get.'"}
{ "index": { "_id":3}}
{ "title": "Balyakala sakhi", "price":250, "Author": "Basheer", "colors": ["orange","green","blue"], "description":"Balyakalasakhi (Malayalam:Balyakalasakhi,meaning childhood companion), is a Malayalam romantic tragedy novel written by Vaikom Muhammad Basheer. ...By Basheer's own admission, the story is largely autobiographical."}
{ "index": { "_id":4}}
{ "title": "The Alchemist", "price":150, "Author": "Paulo Cohelo", "colors": ["red","black"], "description":"Santiago meets an Englishman who wants to learn the secret of alchemy, or turning any metal into gold, from a famous alchemist who lives at an oasis on the way to the pyramids. While traveling, Santiago begins listening to the desert and discovering the Soul of the World. ... It is the alchemist"}
-------------------------

GET /library/books/_search

GET /library/books/_search
{
  "query": {
    "match": {
      "description": "outward"
    }
  }
}


GET /library/books/_search
{
  "query": {
    "match_phrase": {
      "description": "begins listening"
    }
  }
}


--------------------------------- 

GET /library/books/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "description": "desert"
          }
        },
        {
          "match_phrase": {
            "description": "begins listening"
          }
        }
      ]
    }
  }
}


GET /library/books/_search
{
  "query": {
    "bool": {
      "must_not": [
        {
          "match": {
            "description": "begins"
          }
        },
        {
          "match_phrase": {
            "description": "begins listening"
          }
        }
      ]
    }
  }
}
--------------------------------


GET /library/books/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "match_phrase": {
            "description":{
              "query": "Half-Girlfriend",
            "boost":3
          }
          }
        },
        {
          "match_phrase": {
            "description": {
              "query":"begins listening"
          }
        }
        }
      ]
    }
  }
}

--------------------------------------

GET /library/books/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "match_phrase": {
            "description":{
              "query": "Half-Girlfriend",
            "boost":3
          }
          }
        },
        {
          "match_phrase": {
            "description": {
              "query":"begins listening"
          }
        }
        }
      ]
    }
  },
"highlight": {
  "fields": {
    "description": {}
  }
}

}
---------------------------------------

GET /library/books/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "description":"Movie"
            
          }
          }
        ],
        "filter": {
          "range": {
            "price": {
              "gt": 250
            }
          }
        }
    }
  }
  }
  -----------------------------------

GET /library/books/_search
{
  "query": {
    "bool": {
        "filter": {
          "range": {
            "price": {
              "gte": 250
            }
          }
        }
    }
  }
  }
  --------------------------------
GET /library/_analyze
{
  "tokenizer": "standard",
  "filter": ["lowercase","unique "], 
  "text": "Red color White Color"
}

---------------------------------
GET /library/_analyze
{
  "tokenizer": "standard",
   "filter": ["lowercase"],
  "text": "red color! cost.price $5.95 @ 15%"
}

---------------------------

GET /library/_analyze
{
  "tokenizer": "letter",
   "filter": ["lowercase"],
  "text": "red color! cost.price $5.95 @ 15%"
}
------------------------------
GET /library/_analyze
{
  "tokenizer": "standard",
  "text": "abcd.mail@gmail.com website: https://www.gmail.com"
}
-----------------------------------
GET /library/_analyze
{
  "tokenizer": "uax_url_email",
  "text": "abcd.mail@gmail.com website: https://www.gmail.com"
}
--------------------------------
GET /library/_search
{
  "size": 0
  , "aggs": {
    "popular": {
      "terms": {
        "field": "colors.keyword"
      }
    }
  }
}

---------------------------------
GET /library/books/_search
{
  "query": {
    "match": {
      "description": "once"
    }
  },
   "aggs": {
    "popular": {
      "terms": {
        "field": "colors.keyword"
      }
    }
  }
}
-------------------------------
GET /library/_search
{
  "size": 0
  , "aggs": {
    "price": {
      "stats": {
        "field": "price"
      }
    },
    "popular":{
      "terms": {
        "field": "colors.keyword"
        
      },
      "aggs": {
        "avg_price_color": {
          "avg": {
            "field": "price"
          }
        }
      }
    }
  }
}

-------------------------------
POST /library/books/1/_update
{
  "doc": {
    "title":"Harry Potter"
    
  }
}
---------------------------
GET /library/books/4
----------------------------
GET /library/_mapping
-------------------------------
PUT /famous-librarians
{
  "settings": {
    "index": {
      "number_of_shards":2,
      "number_of_replicas":0,
      "analysis":{
        "analyzer":{
          "my-desc-analyzer": {
            "type": "custom",
            "tokenizer": "uax_url_email",
            "filter": ["lowercase"]
          }
        }
      }
    }
  },
  "mappings": {
    "librarian": {
      "properties": {
        "name": {
          "type": "text"
        },
        "favorite-color": {
          "type": "keyword"
      },
      "birth-date": {
        "type": "date",
        "format": "year_month_day"
      },
      "hometown": {
        "type": "geo_point"
      },
      "description": {
        "type": "text",
        "analyzer": "my-desc-analyzer"
      }
    }
  }
}
}
------------------------------------------
POST /famous-librarians/librarian/_bulk
{ "index": { "_id":1}}
{ "name": "Harry potter", "birth-date": "2000-01-01", "favorite-color": ["red","green","blue"], "hometown": { "lat": 32.349722, "lon": -87.641111}, "description": "Movie Outward appearance. Throughout the series, Harry is described as having his father's perpetually untidy black hair, his mother's bright green eyes, and a lightning bolt-shaped scar on his forehead. ... www.gmail.com or abcd.mail@gmail.com once Rowling has also stated that Harry inherited his parents good looks."}
{ "index": { "_id":2}}
{ "name": "Half Girlfriend","birth-date": "2000-01-05" ,"favorite-color": ["red","white","blue"],"hometown": { "lat": 33.349722, "lon": -86.641111}, "description": "Movie Chetan Bhagat commented,'Half-Girlfriend, to me, is a unique Indian phenomenon, where boys and girls are not clear about their relationship status with each other. Once A boy may think he is more than friends with the girl, but the girl is still not his girlfriend.... Because, in India, that is what most men get.'"}

GET /famous-librarians/librarian/_search
---------------------------------------------------
POST /library/books/_search
{
   "query" : {
      "term" : { "description" : "movie" }
   },
   "sort" : [
      {"price" : {"order" : "desc"}}
   ]
}
------------------------------------------

